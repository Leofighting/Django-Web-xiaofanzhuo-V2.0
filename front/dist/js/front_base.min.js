function FrontBase(){}function Auth(){var t=this;t.maskWrapper=$(".mask-wrapper"),t.scrollWrapper=$(".scroll-wrapper"),t.signinGroup=$(".signin-group"),t.signupGroup=$(".signup-group"),t.smsCaptcha=$(".sms-captcha-btn")}FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},FrontBase.prototype.run=function(){this.listenAuthBoxHover()},$(function(){(new FrontBase).run()}),Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var t=this,n=$(".signin-btn"),e=$(".signup-btn"),s=$(".close-btn");n.click(function(){t.showEvent(),t.scrollWrapper.css({left:0})}),e.click(function(){t.showEvent(),t.scrollWrapper.css({left:-400})}),s.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:"0"},500):n.scrollWrapper.animate({left:"-400px"},500)})},Auth.prototype.listenSigninEvent=function(){var s=this,a=s.signinGroup.find("input[name='telephone']"),i=s.signinGroup.find("input[name='password']"),o=s.signinGroup.find("input[name='remember']");s.signinGroup.find(".submit-btn").click(function(){var t=a.val(),n=i.val(),e=o.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:t,password:n,remember:e?1:0},success:function(t){s.hideEvent(),window.location.reload()}})})},Auth.prototype.listenImgCaptchaEvent=function(){var t=$(".img_captcha");t.click(function(){t.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.smsSuccessEvent=function(){var t=this;messageBox.showSuccess("短信验证码发送成功~"),t.smsCaptcha.addClass("disabled");var n=60;t.smsCaptcha.unbind("click");var e=setInterval(function(){t.smsCaptcha.text(n+"s"),--n<=0&&(clearInterval(e),t.smsCaptcha.removeClass("disabled"),t.smsCaptcha.text("发送验证码"),t.listenSmsCaptchaEvent())},1e3)},Auth.prototype.listenSmsCaptchaEvent=function(){var n=this,e=n.signupGroup.find("input[name='telephone']");n.smsCaptcha.click(function(){var t=e.val();t||messageBox.showInfo("请输入手机号码~"),xfzajax.get({url:"/account/sms_captcha/",data:{telephone:t},success:function(t){200===t.code&&n.smsSuccessEvent()}})})},Auth.prototype.listenSignupEvent=function(){var m=this;m.signupGroup.find(".submit-btn").click(function(t){t.preventDefault();var n=m.signupGroup.find("input[name='telephone']"),e=m.signupGroup.find("input[name='username']"),s=m.signupGroup.find("input[name='img_captcha']"),a=m.signupGroup.find("input[name='password1']"),i=m.signupGroup.find("input[name='password2']"),o=m.signupGroup.find("input[name='sms_captcha']"),p=n.val(),r=e.val(),c=s.val(),u=a.val(),l=i.val(),h=o.val();xfzajax.post({url:"/account/register/",data:{telephone:p,username:r,img_captcha:c,password1:u,password2:l,sms_captcha:h},success:function(t){window.location.reload()}})})},Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenImgCaptchaEvent(),t.listenSmsCaptchaEvent(),t.listenSignupEvent()},$(function(){(new Auth).run()}),$(function(){template&&(template.defaults.imports.timeSince=function(t){var n=new Date(t),e=n.getTime(),s=((new Date).getTime()-e)/1e3;return s<60?"刚刚":60<=s&&s<3600?(minutes=parseInt(s/60),minutes+"分钟前"):3600<=s&&s<86400?(hours=parseInt(s/60/60),hours+"小时前"):86400<=s&&s<2592e3?(days=parseInt(s/60/60/24),days+"天前"):n.getFullYear()+"/"+(n.getMonth()+1)+"/"+n.getDay()+" "+n.getHours()+":"+n.getMinutes()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
